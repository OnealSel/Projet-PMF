/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package vue;

import java.awt.*;

import javax.swing.*;

import controler.*;
import controler.abstractions.IDataConnection;
import controler.abstractions.IHandler;
//import model.Model;
import org.jfree.chart.ChartPanel;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

/**
 *
 * @author silentsky
 */
public class Windowsmonitor extends javax.swing.JFrame implements ActionListener {

    //public JLabel ConsigneTempLabel;


    private static final long serialVersionUID = 1L;

    //public static ImageIcon ICON_OFF = new ImageIcon(Windowsmonitor.class.getResource("/vue/noill.png"));
    public static ImageIcon ICON_YES = new ImageIcon(Windowsmonitor.class.getResource("/vue/yesill.png"));
    public static ImageIcon ICON_NO = new ImageIcon(Windowsmonitor.class.getResource("/vue/noill.png"));
    private IHandler regul;
    //private JLabel lbletatfrigo;

    /**
     * Creates the main app Windowsmonitor
     */
    public Windowsmonitor() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.JPanel CenterPanel = new javax.swing.JPanel();
        TopPanel = new javax.swing.JPanel();
        JLabel logoLabel = new JLabel();
        JLabel homeLogoLabel = new JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        JPanel consignePanel = new JPanel();
        lblConsigne = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        ConsigneTempLabel = new javax.swing.JLabel();
        javax.swing.JButton Buttonmoins = new javax.swing.JButton();
        // Variables declaration - do not modify//GEN-BEGIN:variables
        JButton buttonplus = new JButton();
        JPanel cadremesPanel = new JPanel();
        lblTempInt = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        tempIntLabel = new javax.swing.JLabel();
        lblTempExt = new javax.swing.JLabel();
        tempExtLabel = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        JLabel lblHygrometrie = new JLabel();
        JLabel humidityLabel = new JLabel();
        jLabel13 = new javax.swing.JLabel();
        JSeparator separcadremes1 = new JSeparator();
        Sepcadremes2 = new javax.swing.JSeparator();
        SubbottomPanel = new javax.swing.JPanel();
        JLabel copyrightLabel = new JLabel();
        alarmcondensation = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("HU Fridge App");
        setBounds(new java.awt.Rectangle(100, 100, 862, 0));
        setForeground(java.awt.Color.lightGray);
        setName("Windowsmonitorframe"); // NOI18N
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowIconified(java.awt.event.WindowEvent evt) {
                formWindowIconified(evt);
            }
        });

        chart = new LineChart("Graphe mesures temperatures", "Température interne et externe");
        ChartPanel component = new ChartPanel(chart.getJChart());

        CenterPanel.add(component, "name_318427173349897");
        CenterPanel.setBackground(new java.awt.Color(204, 0, 51));
        CenterPanel.setToolTipText("");
        CenterPanel.setLayout(new java.awt.CardLayout());

        TopPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));

        logoLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vue/hu_fridge_logo_mini.png"))); // NOI18N

        homeLogoLabel.setFont(new java.awt.Font("Noto Sans Mono CJK HK", 3, 24)); // NOI18N
        homeLogoLabel.setText("Monitoring Frigo");

        jLabel2.setFont(new java.awt.Font("Liberation Sans", 0, 20)); // NOI18N
        jLabel2.setText("ETAT FRIGO");

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vue/noill.png"))); // NOI18N

        jSeparator2.setOrientation(javax.swing.SwingConstants.VERTICAL);

        javax.swing.GroupLayout TopPanelLayout = new javax.swing.GroupLayout(TopPanel);
        TopPanel.setLayout(TopPanelLayout);
        TopPanelLayout.setHorizontalGroup(
            TopPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TopPanelLayout.createSequentialGroup()
                .addComponent(logoLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(homeLogoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addGap(12, 12, 12)
                .addComponent(jLabel2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        TopPanelLayout.setVerticalGroup(
            TopPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TopPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(TopPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jSeparator2)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, TopPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(TopPanelLayout.createSequentialGroup()
                            .addGap(37, 37, 37)
                            .addComponent(jLabel3))
                        .addGroup(TopPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(homeLogoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(logoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        lblConsigne.setFont(new java.awt.Font("Liberation Sans", 0, 20)); // NOI18N
        lblConsigne.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblConsigne.setText("CONSIGNE");
        lblConsigne.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        ConsigneTempLabel.setFont(new java.awt.Font("URW Gothic L", 1, 24)); // NOI18N
        ConsigneTempLabel.setForeground(new java.awt.Color(41, 166, 156));
        ConsigneTempLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ConsigneTempLabel.setText("16 ° C");

        Buttonmoins.setText("-");
        Buttonmoins.addActionListener(this);
        Buttonmoins.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonmoinsActionPerformed(evt);
            }
        });

        buttonplus.setText("+");
        buttonplus.addActionListener(this);
        buttonplus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonplusActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Buttonmoins, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ConsigneTempLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(buttonplus, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(ConsigneTempLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(Buttonmoins)
                .addComponent(buttonplus))
        );

        ConsigneTempLabel.getAccessibleContext().setAccessibleDescription("");

        javax.swing.GroupLayout ConsignePanelLayout = new javax.swing.GroupLayout(consignePanel);
        consignePanel.setLayout(ConsignePanelLayout);
        ConsignePanelLayout.setHorizontalGroup(
            ConsignePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ConsignePanelLayout.createSequentialGroup()
                .addGap(127, 127, 127)
                .addGroup(ConsignePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblConsigne, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(87, Short.MAX_VALUE))
        );
        ConsignePanelLayout.setVerticalGroup(
            ConsignePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ConsignePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblConsigne, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12))
        );

        cadremesPanel.setBorder(new javax.swing.border.MatteBorder(null));

        lblTempInt.setFont(new java.awt.Font("Liberation Sans", 0, 15)); // NOI18N
        lblTempInt.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTempInt.setText("Temperature Interne");

        jLabel6.setFont(new java.awt.Font("URW Gothic L", 0, 20)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 51, 51));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel6.setText("° C");

        tempIntLabel.setFont(new java.awt.Font("URW Gothic L", 0, 20)); // NOI18N
        tempIntLabel.setForeground(new java.awt.Color(255, 47, 69));
        tempIntLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        tempIntLabel.setText("tempInt");

        lblTempExt.setFont(new java.awt.Font("Liberation Sans", 0, 15)); // NOI18N
        lblTempExt.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTempExt.setText("Temperature Extene");

        tempExtLabel.setFont(new java.awt.Font("URW Gothic L", 0, 20)); // NOI18N
        tempExtLabel.setForeground(new java.awt.Color(53, 213, 223));
        tempExtLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        tempExtLabel.setText("tempExt");

        jLabel10.setFont(new java.awt.Font("URW Gothic L", 0, 20)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(53, 213, 223));
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel10.setText("° C");

        lblHygrometrie.setFont(new java.awt.Font("Liberation Sans", 0, 15)); // NOI18N
        lblHygrometrie.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblHygrometrie.setText("Hygrometrie");

        humidityLabel.setFont(new java.awt.Font("URW Gothic L", 0, 20)); // NOI18N
        humidityLabel.setForeground(new java.awt.Color(211, 26, 177));
        humidityLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        humidityLabel.setText("N-a");

        jLabel13.setFont(new java.awt.Font("URW Gothic L", 0, 20)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(211, 26, 177));
        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel13.setText("%");

        separcadremes1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        Sepcadremes2.setOrientation(javax.swing.SwingConstants.VERTICAL);

        tempIntLabel.setFont(new java.awt.Font("URW Gothic L", 1, 24)); // NOI18N
        tempIntLabel.setForeground(new java.awt.Color(41, 166, 156));
        tempIntLabel.setFont(new java.awt.Font("URW Gothic L", 1, 24)); // NOI18N
        tempIntLabel.setForeground(new java.awt.Color(41, 166, 156));
        tempIntLabel.setFont(new java.awt.Font("URW Gothic L", 1, 24)); // NOI18N
        tempIntLabel.setForeground(new java.awt.Color(41, 166, 156));

        javax.swing.GroupLayout CadremesPanelLayout = new javax.swing.GroupLayout(cadremesPanel);
        cadremesPanel.setLayout(CadremesPanelLayout);
        CadremesPanelLayout.setHorizontalGroup(
            CadremesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CadremesPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(CadremesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(CadremesPanelLayout.createSequentialGroup()
                        .addComponent(tempIntLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lblTempInt, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addComponent(separcadremes1, javax.swing.GroupLayout.PREFERRED_SIZE, 11, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(CadremesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(CadremesPanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(tempExtLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18))
                    .addGroup(CadremesPanelLayout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(lblTempExt, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 42, Short.MAX_VALUE)))
                .addComponent(Sepcadremes2, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(CadremesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(CadremesPanelLayout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(humidityLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(CadremesPanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblHygrometrie, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(18, Short.MAX_VALUE))
        );
        CadremesPanelLayout.setVerticalGroup(
            CadremesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CadremesPanelLayout.createSequentialGroup()
                .addComponent(separcadremes1)
                .addContainerGap())
            .addGroup(CadremesPanelLayout.createSequentialGroup()
                .addGroup(CadremesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(CadremesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(lblTempInt, javax.swing.GroupLayout.DEFAULT_SIZE, 26, Short.MAX_VALUE)
                        .addComponent(lblTempExt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(lblHygrometrie, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(CadremesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, CadremesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(humidityLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 64, Short.MAX_VALUE)
                        .addComponent(jLabel13))
                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(tempExtLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(tempIntLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 6, Short.MAX_VALUE))
            .addComponent(Sepcadremes2)
        );

        copyrightLabel.setFont(new java.awt.Font("Rasa", 0, 12)); // NOI18N
        copyrightLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        copyrightLabel.setText("COPYRIGHT  ©2023");
        copyrightLabel.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);

        javax.swing.GroupLayout SubbottomPanelLayout = new javax.swing.GroupLayout(SubbottomPanel);
        SubbottomPanel.setLayout(SubbottomPanelLayout);
        SubbottomPanelLayout.setHorizontalGroup(
            SubbottomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SubbottomPanelLayout.createSequentialGroup()
                .addComponent(copyrightLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 194, Short.MAX_VALUE)
                .addContainerGap())
        );
        SubbottomPanelLayout.setVerticalGroup(
            SubbottomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(copyrightLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 48, Short.MAX_VALUE)
        );

        alarmcondensation.setFont(new java.awt.Font("Courier 10 Pitch", 1, 15)); // NOI18N
        alarmcondensation.setForeground(new java.awt.Color(247, 26, 27));
        alarmcondensation.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vue/warning.png"))); // NOI18N
        alarmcondensation.setText("Alert !!! Condensation");
        alarmcondensation.setDebugGraphicsOptions(javax.swing.DebugGraphics.LOG_OPTION);
        alarmcondensation.setName("alarmcondensation"); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(TopPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(consignePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(CenterPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(cadremesPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(alarmcondensation)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(SubbottomPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(consignePanel, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TopPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(12, 12, 12)
                .addComponent(CenterPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cadremesPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(alarmcondensation, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(SubbottomPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        CenterPanel.setLayout(new CardLayout(0, 0));
        alarmcondensation.getAccessibleContext().setAccessibleName("Risque de condensation !!!");

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowIconified(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowIconified
        // TODO add your handling code here:
    }//GEN-LAST:event_formWindowIconified

    private void ButtonplusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonplusActionPerformed

        // TODO add your handling code here:
    }//GEN-LAST:event_ButtonplusActionPerformed

    private void ButtonmoinsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonmoinsActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_ButtonmoinsActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */

        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Windowsmonitor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Windowsmonitor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Windowsmonitor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Windowsmonitor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        // Create and display the form //
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new Windowsmonitor().setVisible(true);
            }
        });

        // Logs
        final boolean SIMULATION = args.length > 0 && "simulation".equals(args[0]);

        // On obtient une implémentation de la liaison données
        final IDataConnection datalink = SIMULATION ? new ModelizedDataSource() : getDataLinkImplementation();

        // On affiche l'implémentation retenue
        System.out.println("[DataSource] Data source: " + datalink.getClass().getSimpleName());

        // On fabrique une logique de régulation
        final IHandler regulator = new RegulationTOR();
        //final IHandler regulator = new RegulationPID(1, 1, 1);

        // On fabrique une logique applicative
        final LogiqueApplicative app = new LogiqueApplicative();

        // Je passe dans le thread de l'IHM
        EventQueue.invokeLater(new Runnable() {
            public void run() {

                // On modifie le LookAndFeel
                try {
                    for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                        if ("Nimbus".equals(info.getName())) {
                            javax.swing.UIManager.setLookAndFeel(info.getClassName());
                            break;
                        }
                    }
                } catch (ClassNotFoundException ex) {
                    java.util.logging.Logger.getLogger(Windowsmonitor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
                } catch (InstantiationException ex) {
                    java.util.logging.Logger.getLogger(Windowsmonitor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
                } catch (IllegalAccessException ex) {
                    java.util.logging.Logger.getLogger(Windowsmonitor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
                } catch (javax.swing.UnsupportedLookAndFeelException ex) {
                    java.util.logging.Logger.getLogger(Windowsmonitor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
                }
                // On fabrique une fenêtre
                Windowsmonitor vue = new Windowsmonitor();

                // En production on lève une alerte si on est sur des fausses données, et on l'indique dans le titre de la fenêtre
                if (!SIMULATION && datalink instanceof RandomDataSource) {
                    JOptionPane.showMessageDialog(null, "Impossible d'établire la liaison avec l'Arduino."
                            + "\nDe fausses données vont être utilisées.", "Information", JOptionPane.INFORMATION_MESSAGE);
                    vue.setTitle(vue.getTitle() + " (Simulation)");
                }

                // Et enfin on démarre la logique applicative
                try {
                    app.start(vue, datalink, regulator);
                } catch (Throwable ex) {
                    JOptionPane.showMessageDialog(null, "Erreur au lancement de l'application."
                            + "\n" + ex.getClass().getSimpleName() + " : " + ex.getMessage(), "Erreur", JOptionPane.ERROR_MESSAGE);
                    ex.printStackTrace();
                }

            }
        });

    }

    private static IDataConnection getDataLinkImplementation() {

        // On choisit une implémentation valide de la source de donnée
        IDataConnection obj = chooseImplementation(
                new LisseurTempExterne(new ArduinoDataSource(), 15), // On corrige avec un lissage moyen sur 15 valeurs
                new ModelizedDataSource(),
                new RandomDataSource());

        // Aucune implémentation valide
        if (obj == null) {
            System.err.println("No valid data source implementation to run");
            System.exit(-1);
        }

        // Et one renvoie l'implémentation
        return obj;
    }
    private static IDataConnection chooseImplementation(IDataConnection... impls) {
        // On parcours les implémentations
        for (IDataConnection impl : impls) {
            // On tente d'initialiser
            try {
                impl.init();
            }
            // En cas d'erreur, on tente une autre implémentation
            catch (Throwable e) {
                System.out.println(String.format("[DataSource] Unable to use %s : %s (%s)",
                        impl.getClass().getSimpleName(),
                        e.getMessage(), e.getClass().getSimpleName()));
                continue;
            }
            // On a trouvé une implémentation valide
            return impl;
        }
        // On n'a pas trouvé d'implémentation valide
        return null; //*/
    }


    public javax.swing.JLabel ConsigneTempLabel;
    private javax.swing.JSeparator Sepcadremes2;
    private javax.swing.JPanel SubbottomPanel;
    private javax.swing.JPanel TopPanel;
    private javax.swing.JLabel alarmcondensation;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JLabel lblConsigne;
    private javax.swing.JLabel lblTempExt;
    private javax.swing.JLabel lblTempInt;
    private javax.swing.JLabel tempExtLabel;
    private javax.swing.JLabel tempIntLabel;
    // End of variables declaration//GEN-END:variables
    public JLabel labelConsigneTemp;
    public JLabel labelConsignePower; //to modify
    public JLabel labelTempInt;
    public JLabel labelTempExt;
    public JLabel labelHumitidy;
    public JLabel labelConsoWatt;
    public JLabel alertCondensation;
    public JLabel alertTempGap;
    public JButton btnConsignePlus;
    public JButton btnConsigneMoins;
    public JButton btnFullscreen;
    public LineChart chart;


    /**
     * Invoked when an action occurs.
     *
     * @param e the event to be processed
     */
    @Override
    public void actionPerformed(ActionEvent e) {

        if (e.getActionCommand().equals("+")) {
            regul.setTempConsigne(regul.getConsigneTemperature() + 1);
        }
        else
        {
            regul.setTempConsigne(regul.getConsigneTemperature() - 1);
        }

        ConsigneTempLabel.setText(regul.getConsigneTemperature() + "°C");
    }
}
